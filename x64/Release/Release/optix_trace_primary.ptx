//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	_Z13trace_primaryv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .b8 cam_pos[12];
.global .align 4 .b8 cam_U[12];
.global .align 4 .b8 cam_V[12];
.global .align 4 .b8 cam_S[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .u32 sample;
.global .align 1 .b8 output_buffer[1];
.global .align 4 .b8 top_object[4];
.global .align 1 .b8 rnd_seeds[1];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7cam_posE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_SE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6sampleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename7cam_posE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5cam_UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5cam_VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5cam_SE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6sampleE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7cam_posE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_SE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6sampleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic7cam_posE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_SE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6sampleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation7cam_posE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_SE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6sampleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str1[70] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str2[236] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 100, 101, 116, 97, 105, 108, 115, 32, 58, 32, 37, 115, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str3[138] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str4[148] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str5[136] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str6[98] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str7[126] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str8[99] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str9[135] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str10[94] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str11[53] = {32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str12[133] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str13[141] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str14[200] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str15[164] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 65, 89, 76, 79, 65, 68, 95, 65, 67, 67, 69, 83, 83, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 118, 97, 108, 117, 101, 32, 111, 102, 102, 115, 101, 116, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 118, 97, 108, 117, 101, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 112, 97, 121, 108, 111, 97, 100, 32, 115, 105, 122, 101, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str16[123] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 99, 111, 100, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str18[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str19[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str20[40] = {69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};

.visible .entry _Z13trace_primaryv(

)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<98>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<35>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	ld.global.v2.u32 	{%r3, %r4}, [launch_index];
	cvt.rn.f32.u32	%f5, %r3;
	cvt.rn.f32.u32	%f6, %r4;
	ld.global.v2.u32 	{%r5, %r6}, [launch_dim];
	cvt.rn.f32.u32	%f7, %r5;
	cvt.rn.f32.u32	%f8, %r6;
	div.rn.f32 	%f9, %f5, %f7;
	div.rn.f32 	%f10, %f6, %f8;
	ld.global.f32 	%f11, [cam_U];
	ld.global.f32 	%f12, [cam_U+4];
	mul.f32 	%f13, %f12, %f12;
	fma.rn.f32 	%f14, %f11, %f11, %f13;
	ld.global.f32 	%f15, [cam_U+8];
	fma.rn.f32 	%f16, %f15, %f15, %f14;
	sqrt.rn.f32 	%f17, %f16;
	div.rn.f32 	%f1, %f17, %f7;
	add.s64 	%rd1, %rd3, 12;
	mov.u32 	%r9, 0;
	st.local.u32 	[%rd3+12], %r9;
	mov.u32 	%r10, 1065353216;
	st.local.u32 	[%rd3+16], %r10;
	mov.u64 	%rd4, 0;
	st.local.u32 	[%rd3+24], %rd4;
	st.local.u32 	[%rd3+20], %rd4;
	ld.global.u32 	%r11, [sample];
	setp.lt.u32	%p1, %r11, 2;
	ld.global.f32 	%f18, [cam_V];
	mul.f32 	%f19, %f10, %f18;
	ld.global.f32 	%f20, [cam_V+4];
	mul.f32 	%f21, %f10, %f20;
	ld.global.f32 	%f22, [cam_V+8];
	mul.f32 	%f23, %f10, %f22;
	fma.rn.f32 	%f24, %f9, %f11, %f19;
	fma.rn.f32 	%f25, %f9, %f12, %f21;
	fma.rn.f32 	%f26, %f9, %f15, %f23;
	ld.global.f32 	%f27, [cam_S];
	add.f32 	%f2, %f24, %f27;
	ld.global.f32 	%f28, [cam_S+4];
	add.f32 	%f3, %f25, %f28;
	ld.global.f32 	%f29, [cam_S+8];
	add.f32 	%f4, %f26, %f29;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	and.b32  	%r43, %r3, 127;
	cvt.u64.u32	%rd22, %r43;
	and.b32  	%r44, %r4, 127;
	cvt.u64.u32	%rd23, %r44;
	mov.u64 	%rd27, rnd_seeds;
	cvta.global.u64 	%rd21, %rd27;
	mov.u32 	%r36, 2;
	mov.u32 	%r37, 4;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r36, %r37, %rd22, %rd23, %rd4, %rd4);
	// inline asm
	ld.u32 	%r45, [%rd20];
	mad.lo.s32 	%r46, %r45, 1664525, 1013904223;
	and.b32  	%r47, %r46, 16777215;
	cvt.rn.f32.u32	%f75, %r47;
	fma.rn.f32 	%f76, %f75, 0f33800000, 0fBF000000;
	mad.lo.s32 	%r48, %r46, 1664525, 1013904223;
	and.b32  	%r49, %r48, 16777215;
	cvt.rn.f32.u32	%f77, %r49;
	fma.rn.f32 	%f78, %f77, 0f33800000, 0fBF000000;
	mad.lo.s32 	%r50, %r48, 1664525, 7271263;
	and.b32  	%r51, %r50, 16777215;
	cvt.rn.f32.u32	%f79, %r51;
	fma.rn.f32 	%f80, %f79, 0f33800000, 0fBF000000;
	fma.rn.f32 	%f81, %f1, %f76, %f2;
	fma.rn.f32 	%f82, %f1, %f78, %f3;
	fma.rn.f32 	%f83, %f1, %f80, %f4;
	mul.f32 	%f84, %f82, %f82;
	fma.rn.f32 	%f85, %f81, %f81, %f84;
	fma.rn.f32 	%f86, %f83, %f83, %f85;
	sqrt.rn.f32 	%f87, %f86;
	rcp.rn.f32 	%f88, %f87;
	mul.f32 	%f70, %f88, %f81;
	mul.f32 	%f71, %f88, %f82;
	mul.f32 	%f72, %f88, %f83;
	ld.global.f32 	%f67, [cam_pos];
	ld.global.f32 	%f68, [cam_pos+4];
	ld.global.f32 	%f69, [cam_pos+8];
	ld.global.u32 	%r38, [top_object];
	mov.u32 	%r40, 255;
	mov.u32 	%r42, 28;
	mov.f32 	%f73, 0f00000000;
	mov.f32 	%f74, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_mask_flags_64, (%r38, %f67, %f68, %f69, %f70, %f71, %f72, %r9, %f73, %f74, %r40, %r9, %rd2, %r42);
	// inline asm
	ld.local.f32 	%f89, [%rd1+-12];
	add.f32 	%f90, %f89, 0f00000000;
	ld.local.f32 	%f91, [%rd1+-8];
	add.f32 	%f92, %f91, 0f00000000;
	ld.local.f32 	%f93, [%rd1+-4];
	add.f32 	%f94, %f93, 0f00000000;
	st.local.f32 	[%rd1+-12], %f90;
	st.local.f32 	[%rd1+-8], %f92;
	st.local.f32 	[%rd1+-4], %f94;
	bra.uni 	BB0_3;

BB0_1:
	and.b32  	%r21, %r3, 127;
	cvt.u64.u32	%rd7, %r21;
	and.b32  	%r22, %r4, 127;
	cvt.u64.u32	%rd8, %r22;
	mov.u64 	%rd18, rnd_seeds;
	cvta.global.u64 	%rd6, %rd18;
	mov.u32 	%r19, 2;
	mov.u32 	%r13, 4;
	// inline asm
	call (%rd5), _rt_buffer_get_64, (%rd6, %r19, %r13, %rd7, %rd8, %rd4, %rd4);
	// inline asm
	ld.u32 	%r23, [%rd5];
	mad.lo.s32 	%r24, %r23, 1664525, 1013904223;
	and.b32  	%r25, %r24, 16777215;
	cvt.rn.f32.u32	%f38, %r25;
	fma.rn.f32 	%f39, %f38, 0f33800000, 0fBF000000;
	mad.lo.s32 	%r26, %r24, 1664525, 1013904223;
	and.b32  	%r27, %r26, 16777215;
	cvt.rn.f32.u32	%f40, %r27;
	fma.rn.f32 	%f41, %f40, 0f33800000, 0fBF000000;
	mad.lo.s32 	%r28, %r26, 1664525, 7271263;
	and.b32  	%r29, %r28, 16777215;
	cvt.rn.f32.u32	%f42, %r29;
	fma.rn.f32 	%f43, %f42, 0f33800000, 0fBF000000;
	fma.rn.f32 	%f44, %f1, %f39, %f2;
	fma.rn.f32 	%f45, %f1, %f41, %f3;
	fma.rn.f32 	%f46, %f1, %f43, %f4;
	mul.f32 	%f47, %f45, %f45;
	fma.rn.f32 	%f48, %f44, %f44, %f47;
	fma.rn.f32 	%f49, %f46, %f46, %f48;
	sqrt.rn.f32 	%f50, %f49;
	rcp.rn.f32 	%f51, %f50;
	mul.f32 	%f33, %f51, %f44;
	mul.f32 	%f34, %f51, %f45;
	mul.f32 	%f35, %f51, %f46;
	ld.global.f32 	%f30, [cam_pos];
	ld.global.f32 	%f31, [cam_pos+4];
	ld.global.f32 	%f32, [cam_pos+8];
	ld.global.u32 	%r14, [top_object];
	mov.u32 	%r16, 255;
	mov.u32 	%r18, 28;
	mov.f32 	%f36, 0f00000000;
	mov.f32 	%f37, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_mask_flags_64, (%r14, %f30, %f31, %f32, %f33, %f34, %f35, %r9, %f36, %f37, %r16, %r9, %rd2, %r18);
	// inline asm
	ld.global.v2.u32 	{%r30, %r31}, [launch_index];
	cvt.u64.u32	%rd14, %r30;
	cvt.u64.u32	%rd15, %r31;
	mov.u64 	%rd19, output_buffer;
	cvta.global.u64 	%rd13, %rd19;
	mov.u32 	%r20, 12;
	// inline asm
	call (%rd12), _rt_buffer_get_64, (%rd13, %r19, %r20, %rd14, %rd15, %rd4, %rd4);
	// inline asm
	ld.global.u32 	%r34, [sample];
	add.s32 	%r35, %r34, -1;
	cvt.rn.f32.u32	%f52, %r35;
	ld.f32 	%f53, [%rd12];
	ld.f32 	%f54, [%rd12+4];
	ld.f32 	%f55, [%rd12+8];
	ld.local.f32 	%f56, [%rd1+-12];
	fma.rn.f32 	%f57, %f53, %f52, %f56;
	ld.local.f32 	%f58, [%rd1+-8];
	fma.rn.f32 	%f59, %f54, %f52, %f58;
	ld.local.f32 	%f60, [%rd1+-4];
	fma.rn.f32 	%f61, %f52, %f55, %f60;
	cvt.rn.f32.u32	%f62, %r34;
	rcp.rn.f32 	%f63, %f62;
	mul.f32 	%f64, %f57, %f63;
	mul.f32 	%f65, %f59, %f63;
	mul.f32 	%f66, %f61, %f63;
	st.local.f32 	[%rd1+-12], %f64;
	st.local.f32 	[%rd1+-8], %f65;
	st.local.f32 	[%rd1+-4], %f66;

BB0_3:
	ld.global.v2.u32 	{%r54, %r55}, [launch_index];
	cvt.u64.u32	%rd30, %r54;
	cvt.u64.u32	%rd31, %r55;
	mov.u64 	%rd34, output_buffer;
	cvta.global.u64 	%rd29, %rd34;
	mov.u32 	%r52, 2;
	mov.u32 	%r53, 12;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r52, %r53, %rd30, %rd31, %rd4, %rd4);
	// inline asm
	ld.local.f32 	%f95, [%rd1+-12];
	ld.local.f32 	%f96, [%rd1+-8];
	ld.local.f32 	%f97, [%rd1+-4];
	st.f32 	[%rd28], %f95;
	st.f32 	[%rd28+4], %f96;
	st.f32 	[%rd28+8], %f97;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.local .align 16 .b8 	__local_depot1[416];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<43>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<130>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<130>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd28, %SP, 384;
	add.u64 	%rd29, %SPL, 384;
	// inline asm
	call (%r75), _rt_get_exception_code, ();
	// inline asm
	ld.global.v2.u32 	{%r77, %r78}, [launch_index];
	add.u64 	%rd30, %SP, 400;
	add.u64 	%rd31, %SPL, 400;
	st.local.v2.u32 	[%rd31], {%r75, %r77};
	st.local.u32 	[%rd31+8], %r78;
	mov.u64 	%rd32, $str20;
	cvta.global.u64 	%rd33, %rd32;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r81, [retval0+0];
	
	//{
	}// Callseq End 0
	// inline asm
	call (%r76), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r76, 1020;
	add.s64 	%rd1, %rd29, 4;
	@%p1 bra 	BB1_61;
	bra.uni 	BB1_1;

BB1_61:
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r74, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r121), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p42, %r121, 0;
	@%p42 bra 	BB1_63;

	st.local.u32 	[%rd29], %r72;
	st.local.u32 	[%rd1], %r73;
	st.local.u32 	[%rd1+4], %r74;
	mov.u64 	%rd117, $str;
	cvta.global.u64 	%rd118, %rd117;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd118;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r122, [retval0+0];
	
	//{
	}// Callseq End 19
	bra.uni 	BB1_63;

BB1_1:
	setp.eq.s32	%p2, %r76, 1005;
	@%p2 bra 	BB1_59;
	bra.uni 	BB1_2;

BB1_59:
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r119), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r119, 0;
	@%p41 bra 	BB1_63;

	st.local.u32 	[%rd29], %r69;
	st.local.u32 	[%rd1], %r70;
	st.local.u32 	[%rd1+4], %r71;
	mov.u64 	%rd113, $str1;
	cvta.global.u64 	%rd114, %rd113;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd114;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r120, [retval0+0];
	
	//{
	}// Callseq End 18
	bra.uni 	BB1_63;

BB1_2:
	setp.eq.s32	%p3, %r76, 1021;
	@%p3 bra 	BB1_53;
	bra.uni 	BB1_3;

BB1_53:
	ld.volatile.global.u32 	%r63, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r65, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd19, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r67, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u64 	%rd20, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd129, 1;
	setp.lt.u32	%p38, %r63, 2;
	mov.u64 	%rd128, %rd129;
	@%p38 bra 	BB1_55;

	ld.volatile.global.u64 	%rd128, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB1_55:
	setp.lt.u32	%p39, %r63, 3;
	@%p39 bra 	BB1_57;

	ld.volatile.global.u64 	%rd129, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB1_57:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd25, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd27, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r117), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p40, %r117, 0;
	@%p40 bra 	BB1_63;

	add.u64 	%rd107, %SP, 296;
	add.u64 	%rd108, %SPL, 296;
	st.local.v2.u32 	[%rd108], {%r64, %r65};
	st.local.u32 	[%rd108+24], %r67;
	st.local.u32 	[%rd108+56], %r68;
	st.local.v2.u32 	[%rd108+8], {%r66, %r63};
	st.local.u64 	[%rd108+16], %rd19;
	st.local.u64 	[%rd108+32], %rd20;
	st.local.u64 	[%rd108+40], %rd128;
	st.local.u64 	[%rd108+48], %rd129;
	st.local.u64 	[%rd108+64], %rd25;
	st.local.u64 	[%rd108+72], %rd26;
	st.local.u64 	[%rd108+80], %rd27;
	mov.u64 	%rd109, $str2;
	cvta.global.u64 	%rd110, %rd109;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd110;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd107;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r118, [retval0+0];
	
	//{
	}// Callseq End 17

BB1_63:
	ld.global.v2.u32 	{%r125, %r126}, [launch_index];
	cvt.u64.u32	%rd121, %r125;
	cvt.u64.u32	%rd122, %r126;
	mov.u64 	%rd125, output_buffer;
	cvta.global.u64 	%rd120, %rd125;
	mov.u32 	%r123, 2;
	mov.u32 	%r124, 12;
	mov.u64 	%rd124, 0;
	// inline asm
	call (%rd119), _rt_buffer_get_64, (%rd120, %r123, %r124, %rd121, %rd122, %rd124, %rd124);
	// inline asm
	ld.global.u32 	%rd126, [bad_color];
	ld.global.f32 	%f9, [bad_color+8];
	ld.global.u32 	%rd127, [bad_color+4];
	st.u32 	[%rd119+4], %rd127;
	st.u32 	[%rd119], %rd126;
	st.f32 	[%rd119+8], %f9;
	ret;

BB1_3:
	setp.eq.s32	%p4, %r76, 1006;
	add.u64 	%rd34, %SP, 272;
	add.u64 	%rd35, %SPL, 272;
	add.s64 	%rd2, %rd35, 4;
	@%p4 bra 	BB1_44;
	bra.uni 	BB1_4;

BB1_44:
	ld.volatile.global.u32 	%r110, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p32, %r110, 1;
	@%p32 bra 	BB1_51;

	setp.eq.s32	%p33, %r110, 2;
	@%p33 bra 	BB1_49;
	bra.uni 	BB1_46;

BB1_49:
	ld.volatile.global.u32 	%r56, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r57, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r59, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd17, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r113), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r113, 0;
	@%p36 bra 	BB1_63;

	st.local.u32 	[%rd35], %r56;
	st.local.u32 	[%rd2], %r57;
	st.local.v2.u32 	[%rd2+4], {%r58, %r59};
	st.local.u64 	[%rd2+12], %rd17;
	mov.u64 	%rd99, $str4;
	cvta.global.u64 	%rd100, %rd99;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd100;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r114, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB1_63;

BB1_4:
	setp.eq.s32	%p5, %r76, 1007;
	add.u64 	%rd36, %SP, 256;
	add.u64 	%rd37, %SPL, 256;
	add.s64 	%rd3, %rd37, 4;
	@%p5 bra 	BB1_35;
	bra.uni 	BB1_5;

BB1_35:
	ld.volatile.global.u32 	%r103, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p26, %r103, 1;
	@%p26 bra 	BB1_42;

	setp.eq.s32	%p27, %r103, 2;
	@%p27 bra 	BB1_40;
	bra.uni 	BB1_37;

BB1_40:
	ld.volatile.global.u32 	%r45, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r46, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r47, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r48, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r106), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p30, %r106, 0;
	@%p30 bra 	BB1_63;

	st.local.u32 	[%rd37], %r45;
	st.local.u32 	[%rd3], %r46;
	st.local.v2.u32 	[%rd3+4], {%r47, %r48};
	mov.u64 	%rd87, $str7;
	cvta.global.u64 	%rd88, %rd87;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd36;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r107, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB1_63;

BB1_5:
	setp.eq.s32	%p6, %r76, 1018;
	@%p6 bra 	BB1_26;
	bra.uni 	BB1_6;

BB1_26:
	ld.volatile.global.u32 	%r96, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p20, %r96, 1;
	@%p20 bra 	BB1_33;

	setp.eq.s32	%p21, %r96, 2;
	@%p21 bra 	BB1_31;
	bra.uni 	BB1_28;

BB1_31:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r99), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p24, %r99, 0;
	@%p24 bra 	BB1_63;

	mov.u64 	%rd71, $str11;
	cvta.global.u64 	%rd72, %rd71;
	add.u64 	%rd73, %SP, 224;
	add.u64 	%rd74, %SPL, 224;
	st.local.u64 	[%rd74], %rd72;
	st.local.u64 	[%rd74+24], %rd14;
	st.local.v2.u32 	[%rd74+8], {%r35, %r36};
	st.local.v2.u32 	[%rd74+16], {%r37, %r38};
	mov.u64 	%rd75, $str10;
	cvta.global.u64 	%rd76, %rd75;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd76;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd73;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r100, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB1_63;

BB1_51:
	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r61, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd18, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r115), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p37, %r115, 0;
	@%p37 bra 	BB1_63;

	st.local.u32 	[%rd35], %r60;
	st.local.u32 	[%rd2], %r61;
	st.local.u32 	[%rd2+4], %r62;
	st.local.u64 	[%rd2+12], %rd18;
	mov.u64 	%rd103, $str3;
	cvta.global.u64 	%rd104, %rd103;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd104;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r116, [retval0+0];
	
	//{
	}// Callseq End 16
	bra.uni 	BB1_63;

BB1_46:
	setp.ne.s32	%p34, %r110, 3;
	@%p34 bra 	BB1_63;

	ld.volatile.global.u32 	%r52, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r54, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r55, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd16, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r111), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p35, %r111, 0;
	@%p35 bra 	BB1_63;

	st.local.u32 	[%rd35], %r52;
	st.local.u32 	[%rd2], %r53;
	st.local.v2.u32 	[%rd2+4], {%r54, %r55};
	st.local.u64 	[%rd2+12], %rd16;
	mov.u64 	%rd95, $str5;
	cvta.global.u64 	%rd96, %rd95;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd96;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r112, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB1_63;

BB1_6:
	setp.eq.s32	%p7, %r76, 1019;
	@%p7 bra 	BB1_24;
	bra.uni 	BB1_7;

BB1_24:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r94), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r94, 0;
	@%p19 bra 	BB1_63;

	add.u64 	%rd63, %SP, 176;
	add.u64 	%rd64, %SPL, 176;
	st.local.v2.u32 	[%rd64], {%r28, %r29};
	st.local.u32 	[%rd64+8], %r30;
	st.local.u64 	[%rd64+16], %rd10;
	st.local.u64 	[%rd64+24], %rd11;
	st.local.u64 	[%rd64+32], %rd12;
	mov.u64 	%rd65, $str13;
	cvta.global.u64 	%rd66, %rd65;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd63;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r95, [retval0+0];
	
	//{
	}// Callseq End 7
	bra.uni 	BB1_63;

BB1_42:
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r50, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r51, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r108), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p31, %r108, 0;
	@%p31 bra 	BB1_63;

	st.local.u32 	[%rd29], %r49;
	st.local.u32 	[%rd1], %r50;
	st.local.u32 	[%rd1+4], %r51;
	mov.u64 	%rd91, $str6;
	cvta.global.u64 	%rd92, %rd91;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd92;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r109, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB1_63;

BB1_37:
	setp.ne.s32	%p28, %r103, 3;
	@%p28 bra 	BB1_63;

	ld.volatile.global.u32 	%r42, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r43, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r44, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r104), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r104, 0;
	@%p29 bra 	BB1_63;

	st.local.u32 	[%rd29], %r42;
	st.local.u32 	[%rd1], %r43;
	st.local.u32 	[%rd1+4], %r44;
	mov.u64 	%rd83, $str8;
	cvta.global.u64 	%rd84, %rd83;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd84;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r105, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB1_63;

BB1_7:
	setp.eq.s32	%p8, %r76, 1022;
	@%p8 bra 	BB1_22;
	bra.uni 	BB1_8;

BB1_22:
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r92), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p18, %r92, 0;
	@%p18 bra 	BB1_63;

	mov.b32 	 %f1, %r19;
	cvt.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r20;
	mov.b32 	 %f3, %r21;
	mov.b32 	 %f4, %r22;
	mov.b32 	 %f5, %r23;
	mov.b32 	 %f6, %r24;
	cvt.f64.f32	%fd2, %f6;
	mov.b32 	 %f7, %r26;
	mov.b32 	 %f8, %r27;
	add.u64 	%rd58, %SP, 80;
	add.u64 	%rd59, %SPL, 80;
	st.local.v2.u32 	[%rd59], {%r16, %r17};
	st.local.u32 	[%rd59+8], %r18;
	mov.b64 	 %rd60, %fd1;
	st.local.u32 	[%rd59+72], %r25;
	st.local.v2.u64 	[%rd59+16], {%rd9, %rd60};
	cvt.f64.f32	%fd3, %f3;
	cvt.f64.f32	%fd4, %f2;
	st.local.v2.f64 	[%rd59+32], {%fd4, %fd3};
	cvt.f64.f32	%fd5, %f5;
	cvt.f64.f32	%fd6, %f4;
	st.local.v2.f64 	[%rd59+48], {%fd6, %fd5};
	st.local.f64 	[%rd59+64], %fd2;
	cvt.f64.f32	%fd7, %f8;
	cvt.f64.f32	%fd8, %f7;
	st.local.v2.f64 	[%rd59+80], {%fd8, %fd7};
	mov.u64 	%rd61, $str14;
	cvta.global.u64 	%rd62, %rd61;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r93, [retval0+0];
	
	//{
	}// Callseq End 6
	bra.uni 	BB1_63;

BB1_33:
	ld.volatile.global.u32 	%r39, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r40, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r41, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r101), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p25, %r101, 0;
	@%p25 bra 	BB1_63;

	st.local.u32 	[%rd35], %r39;
	st.local.u32 	[%rd2], %r40;
	st.local.u32 	[%rd2+4], %r41;
	st.local.u64 	[%rd2+12], %rd15;
	mov.u64 	%rd79, $str9;
	cvta.global.u64 	%rd80, %rd79;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r102, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB1_63;

BB1_28:
	setp.ne.s32	%p22, %r96, 3;
	@%p22 bra 	BB1_63;

	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r97), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p23, %r97, 0;
	@%p23 bra 	BB1_63;

	st.local.u32 	[%rd35], %r31;
	st.local.u32 	[%rd2], %r32;
	st.local.v2.u32 	[%rd2+4], {%r33, %r34};
	st.local.u64 	[%rd2+12], %rd13;
	mov.u64 	%rd69, $str12;
	cvta.global.u64 	%rd70, %rd69;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd70;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r98, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB1_63;

BB1_8:
	setp.eq.s32	%p9, %r76, 1003;
	@%p9 bra 	BB1_20;
	bra.uni 	BB1_9;

BB1_20:
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail3E];
	// inline asm
	call (%r90), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p17, %r90, 0;
	@%p17 bra 	BB1_63;

	add.u64 	%rd54, %SP, 32;
	add.u64 	%rd55, %SPL, 32;
	st.local.v2.u32 	[%rd55], {%r13, %r14};
	st.local.u32 	[%rd55+8], %r15;
	st.local.v2.u64 	[%rd55+16], {%rd5, %rd6};
	st.local.v2.u64 	[%rd55+32], {%rd7, %rd8};
	mov.u64 	%rd56, $str15;
	cvta.global.u64 	%rd57, %rd56;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd57;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd54;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r91, [retval0+0];
	
	//{
	}// Callseq End 5
	bra.uni 	BB1_63;

BB1_9:
	setp.eq.s32	%p10, %r76, 1004;
	@%p10 bra 	BB1_18;
	bra.uni 	BB1_10;

BB1_18:
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r88), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p16, %r88, 0;
	@%p16 bra 	BB1_63;

	add.u64 	%rd50, %SP, 0;
	add.u64 	%rd51, %SPL, 0;
	st.local.v2.u32 	[%rd51], {%r9, %r10};
	st.local.u32 	[%rd51+8], %r11;
	st.local.u32 	[%rd51+24], %r12;
	st.local.u64 	[%rd51+16], %rd4;
	mov.u64 	%rd52, $str16;
	cvta.global.u64 	%rd53, %rd52;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd53;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r89, [retval0+0];
	
	//{
	}// Callseq End 4
	bra.uni 	BB1_63;

BB1_10:
	add.s32 	%r2, %r76, -1024;
	setp.lt.u32	%p11, %r2, 64512;
	@%p11 bra 	BB1_16;
	bra.uni 	BB1_11;

BB1_16:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r86), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r86, 0;
	@%p15 bra 	BB1_63;

	add.s32 	%r129, %r76, -1024;
	st.local.u32 	[%rd37], %r129;
	st.local.u32 	[%rd3], %r6;
	st.local.v2.u32 	[%rd3+4], {%r7, %r8};
	mov.u64 	%rd48, $str17;
	cvta.global.u64 	%rd49, %rd48;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd36;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r87, [retval0+0];
	
	//{
	}// Callseq End 3
	bra.uni 	BB1_63;

BB1_11:
	setp.eq.s32	%p12, %r76, 1023;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p12 bra 	BB1_14;
	bra.uni 	BB1_12;

BB1_14:
	// inline asm
	call (%r84), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r84, 0;
	@%p14 bra 	BB1_63;

	st.local.u32 	[%rd29], %r3;
	st.local.u32 	[%rd1], %r4;
	st.local.u32 	[%rd1+4], %r5;
	mov.u64 	%rd44, $str18;
	cvta.global.u64 	%rd45, %rd44;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r85, [retval0+0];
	
	//{
	}// Callseq End 2
	bra.uni 	BB1_63;

BB1_12:
	// inline asm
	call (%r82), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r82, 0;
	@%p13 bra 	BB1_63;

	st.local.u32 	[%rd29], %r3;
	st.local.u32 	[%rd1], %r4;
	st.local.u32 	[%rd1+4], %r5;
	mov.u64 	%rd40, $str19;
	cvta.global.u64 	%rd41, %rd40;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd41;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r83, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB1_63;
}


